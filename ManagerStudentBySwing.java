/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package BaiTapLapTrinh;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Locale;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class ManagerStudentBySwing extends javax.swing.JFrame {
    private List<Student> studentList = new ArrayList<>();
    
//    SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy", Locale.ENGLISH);  
    
    /**
     * Creates new form ManagerStudentBySwing
     */
    public ManagerStudentBySwing() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        JDateBirthDay = new com.toedter.calendar.JDateChooser();
        cbGender = new javax.swing.JComboBox<>();
        txtMajor = new javax.swing.JTextField();
        jDateEnrolledDate = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        TbKetQua = new javax.swing.JTable();
        bntNhap = new javax.swing.JButton();
        bntWrite = new javax.swing.JButton();
        bntRead = new javax.swing.JButton();
        bntSortByName = new javax.swing.JButton();
        bntSortByAge = new javax.swing.JButton();
        bntExit = new javax.swing.JButton();
        txtStudentId = new javax.swing.JTextField();
        txtDuongDan = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Management");

        jLabel1.setText("Name");

        jLabel2.setText("Birthday");

        jLabel3.setText("Gender");

        jLabel4.setText("StudentId");

        jLabel5.setText("Major");

        jLabel6.setText("EnrolledDate");

        cbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        TbKetQua.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StudentID", "Name", "BirthDay", "Gender", "Major", "EnrolledDate"
            }
        ));
        jScrollPane1.setViewportView(TbKetQua);

        bntNhap.setText("ADD STUDENT");
        bntNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntNhapActionPerformed(evt);
            }
        });

        bntWrite.setText("WRITE FILE");
        bntWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntWriteActionPerformed(evt);
            }
        });

        bntRead.setText("READ FILE");
        bntRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntReadActionPerformed(evt);
            }
        });

        bntSortByName.setText("SORT BY NAME");
        bntSortByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSortByNameActionPerformed(evt);
            }
        });

        bntSortByAge.setText("SORT BY BIRTHDAY");
        bntSortByAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSortByAgeActionPerformed(evt);
            }
        });

        bntExit.setText("EXIT");
        bntExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtStudentId))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(JDateBirthDay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtName)
                                    .addComponent(txtMajor, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jDateEnrolledDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bntSortByAge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bntSortByName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bntExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bntRead, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bntWrite, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bntNhap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtDuongDan, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bntNhap)
                            .addComponent(jLabel4)
                            .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(bntWrite))
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bntRead)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2))
                    .addComponent(JDateBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(bntExit))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMajor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntSortByName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel6))
                        .addComponent(bntSortByAge))
                    .addComponent(jDateEnrolledDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txtDuongDan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void resetForm(){
        txtStudentId.setText("");
        txtName.setText("");
        txtMajor.setText("");
        
    }
    public void fillTable(){
        SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy", Locale.ENGLISH);  
        DefaultTableModel model = (DefaultTableModel)TbKetQua.getModel();
        model.setRowCount(0);
        for (Student student : studentList) {
            model.insertRow(model.getRowCount(), new Object[]{student.getStudentId()
                                                          ,student.getName()
                                                          ,df.format(student.getBirthday())
                                                          ,student.getGender()
                                                          ,student.getMajor()                                                          ,df.format(student.getEnrolledDate())});
        }
       
        model.fireTableDataChanged();
    }
    private void bntNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntNhapActionPerformed
        // TODO add your handling code here
        StringBuilder sb = new StringBuilder();
        if(txtStudentId.getText().equals("")){
            sb.append("StudentID không đươc để trống !!!! \n" );
        }
        if(txtName.getText().equals("")){
            sb.append("Name không được để trống!!!! \n");
        }
        if(txtMajor.getText().equals("")){
            sb.append("Major không được để trống!!! \n");
        }
        if(sb.length()>0){
            JOptionPane.showMessageDialog(this, sb.toString(),"Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Student student = new Student();
        student.setStudentId(txtStudentId.getText());
        student.setName(txtName.getText());
        student.setBirthday(JDateBirthDay.getDate());
        student.setGender((byte) cbGender.getSelectedIndex());
        student.setMajor(txtMajor.getText());
        student.setEnrolledDate(jDateEnrolledDate.getDate());
        
        studentList.add(student);        
        fillTable();       
        resetForm();
    }//GEN-LAST:event_bntNhapActionPerformed

    private void bntExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExitActionPerformed
        // TODO add your handling code here:        
        System.exit(0);
    }//GEN-LAST:event_bntExitActionPerformed

    private void bntSortByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSortByNameActionPerformed
        // TODO add your handling code here:
        if(studentList.size()>0){
        Collections.sort(studentList, new Comparator<Student>(){
            @Override
            public int compare(Student o1, Student o2) {
                  return o1.getName().compareTo(o2.getName());
            }
            
        });
        }
        else{
            JOptionPane.showMessageDialog(this, "Không có dữ liệu cần sắp xếp!!!","Error",JOptionPane.ERROR_MESSAGE);
        }
        fillTable();
    }//GEN-LAST:event_bntSortByNameActionPerformed

    private void bntSortByAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSortByAgeActionPerformed
        // TODO add your handling code here:
        if(studentList.size()>0){
            Collections.sort(studentList, new Comparator<Student>(){
            @Override
            public int compare(Student o1, Student o2) {
                  return o1.getBirthday().compareTo(o2.getBirthday());
            }
            
        });
        }
        else{
            JOptionPane.showMessageDialog(this, "Không có dữ liệu cần sắp xếp!!!","Error",JOptionPane.ERROR_MESSAGE);
        }
        fillTable();

    }//GEN-LAST:event_bntSortByAgeActionPerformed

    private void bntWriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntWriteActionPerformed
        // TODO add your handling code here:
        if(studentList.isEmpty()){
            JOptionPane.showMessageDialog(this, "Danh sách rỗng!!!","Error",JOptionPane.ERROR_MESSAGE);  
            return;
        }
        int value = jFileChooser.showSaveDialog(this);
        if(value==JFileChooser.APPROVE_OPTION){
            File file = jFileChooser.getSelectedFile();
            this.txtDuongDan.setText(file.getAbsolutePath());
      
            FileOutputStream fos =null;
            ObjectOutputStream oos = null;
            try {
                fos = new FileOutputStream(file);
                oos = new ObjectOutputStream(fos); 
                oos.writeObject(studentList);                
                JOptionPane.showMessageDialog(rootPane, "Lưu dữ liệu thành công!!!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lưu dữ liệu thất bại!!!","Error",JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }finally{
                try {
                    oos.close();
                    fos.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            
        }
    }//GEN-LAST:event_bntWriteActionPerformed

    private void bntReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntReadActionPerformed
        // TODO add your handling code here:       
        int value = jFileChooser.showOpenDialog(this);
        if(value==JFileChooser.APPROVE_OPTION){
            File file = jFileChooser.getSelectedFile();
            this.txtDuongDan.setText(file.getAbsolutePath());
            FileInputStream fis =null;
            ObjectInputStream ois = null;
            try {
                fis = new FileInputStream(file);
                ois = new ObjectInputStream(fis);
                studentList =(List<Student>)ois.readObject();
                fillTable();
                JOptionPane.showMessageDialog(rootPane, "Đọc dữ liệu thành công!!!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Đọc dữ liệu thất bại!!!","Error",JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }finally{
                try {
                    if(ois!=null && fis != null){
                        ois.close();
                        fis.close();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            
        }
    }//GEN-LAST:event_bntReadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerStudentBySwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerStudentBySwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerStudentBySwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerStudentBySwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerStudentBySwing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser JDateBirthDay;
    private javax.swing.JTable TbKetQua;
    private javax.swing.JButton bntExit;
    private javax.swing.JButton bntNhap;
    private javax.swing.JButton bntRead;
    private javax.swing.JButton bntSortByAge;
    private javax.swing.JButton bntSortByName;
    private javax.swing.JButton bntWrite;
    private javax.swing.JComboBox<String> cbGender;
    private com.toedter.calendar.JDateChooser jDateEnrolledDate;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtDuongDan;
    private javax.swing.JTextField txtMajor;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtStudentId;
    // End of variables declaration//GEN-END:variables
}
